scale_y_continuous(breaks = seq(0,60,by=5))+
coord_flip()+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = "n=8389\ntime frame = 90 days\noutliers removed)")+
theme(legend.position="none")+
atlassian_theme
df_exp <- df
variable = df_exp$pushes_per_user
xtitle = "# pushes per user"
title = "Pushes per user"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = "n=8389\ntime frame = 90 days\noutliers removed)")+
theme(legend.position="none")+
atlassian_theme
df_exp <- df
variable = df_exp$branches_per_push
xtitle = "# branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = "n=8389\ntime frame = 90 days\noutliers removed)")+
theme(legend.position="none")+
atlassian_theme
8389-992
df_exp <- df
variable = df_exp$branches_per_push
xtitle = "# branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = "n=7397\ntime frame = 90 days\noutliers removed)")+
theme(legend.position="none")+
atlassian_theme
df_exp <- df
variable = branches_per_push
xtitle = "# branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = "n=7397\ntime frame = 90 days\noutliers removed)")+
theme(legend.position="none")+
atlassian_theme
variable = branches_per_push
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
xtitle = "# branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",df_exp,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
variable = branches_per_push
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
xtitle = "# branches per push"
title = "Branches per push"
variable = "branches_per_push"
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
xtitle = paste0("#",variable)
title = "Branches per push"
paste0("df_exp$",variable)
variable = "branches_per_push"
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
xtitle = paste0("#",variable)
title = "Branches per push"
ylim1 = boxplot.stats(paste0("df_exp$",variable))$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",df_exp,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
variable = "branches_per_push"
paste0(variable)
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
n
variable = df_exp$branches_per_push
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
xtitle = paste0("#",variable)
title = "Branches per push"
n
variable = df_exp$branches_per_push
df_exp <- df %>% filter(!is.na(variable))
n <- nrow(df_exp)
xtitle = paste0("#",variable)
title = "Branches per push"
ylim1 = boxplot.stats(df_exp,variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(branches_per_push))
variable = df_exp$branches_per_push
n <- nrow(df_exp)
xtitle = paste0("#",variable)
title = "Branches per push"
ylim1 = boxplot.stats(df_exp,variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
ylim1 = boxplot.stats(df_exp,variable)$stats[c(1, 5)]
summary(df_exp$branches_per_push)
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable ))
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(branches_per_push))
variable = df_exp$branches_per_push
n <- nrow(df_exp)
xtitle = "# Branches per push")
title = "Branches per push"
df_exp <- df %>% filter(!is.na(branches_per_push))
variable = df_exp$branches_per_push
n <- nrow(df_exp)
xtitle = "# Branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(df_exp,variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(branches_per_push))
summary(df_exp$branches_per_push)
str(df_exp)
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(branches_per_push))
variable = df_exp$branches_per_push
n <- nrow(df_exp)
xtitle = "# Branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(branches_per_user))
variable = df_exp$branches_per_user
n <- nrow(df_exp)
xtitle = "# Branches per user"
title = "Branches per user"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(prs_per_push))
variable = df_exp$prs_per_push
n <- nrow(df_exp)
xtitle = "# Branches per push"
title = "Branches per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(prs_per_user))
variable = df_exp$prs_per_user
n <- nrow(df_exp)
xtitle = "# Branches per user"
title = "Branches per user"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(prs_per_push))
variable = df_exp$prs_per_user
n <- nrow(df_exp)
xtitle = "# PRs per push"
title = "PRs per push"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(prs_per_user))
variable = df_exp$prs_per_user
n <- nrow(df_exp)
xtitle = "# PRs per user"
title = "PRs per user"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
names(df)
df_exp <- df %>% filter(!is.na(interaction_per_pr))
variable = df_exp$interaction_per_pr
n <- nrow(df_exp)
xtitle = "# Iterations per PR"
title = "Iterations per PR"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(share_pring_users))
variable = df_exp$share_pring_users
n <- nrow(df_exp)
xtitle = "% users interacting with PRs"
title = "Users interacting with PRs"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(median_ttm))
variable = df_exp$median_ttm
n <- nrow(df_exp)
xtitle = "median PR merge time (days)"
title = "PR merge time"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
df_exp <- df %>% filter(!is.na(pr_merge_rate))
variable = df_exp$pr_merge_rate
n <- nrow(df_exp)
xtitle = "PR merge rate %"
title = "PR merge rate"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
variable = df_exp$pushes_per_user
summary(variable)
describeBy(variable, group=df_exp$tech_region,digits=15,mat=T)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
describeBy(variable, group=list(df_exp$user_tier_gr, df_exp$tech_region),digits=15,mat=T)
variable = df_exp$pushes_per_user
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
variable = df_exp$branches_per_push
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
30/10
300/10
3/100
df_exp <- df %>% filter(!is.na(branches_per_push))
variable = df_exp$branches_per_push
n <- nrow(df_exp)
xtitle = "PR merge rate %"
title = "PR merge rate"
ylim1 = boxplot.stats(variable)$stats[c(1, 5)]
ggplot(data=df_exp, aes(x=reorder(user_tier_gr,-pushes_per_user),y=variable )) +
geom_jitter(size=0.5,height = 0.1,width = 0.25,alpha= 0.25,aes(colour = user_tier_gr,alpha=0.2))+
geom_boxplot(colour = "#000000", alpha = 0.25,outlier.size=0)+
scale_color_manual(values=c("#0065FF","#FFAB00","#7A869A"))+
#coord_cartesian(ylim = ylim1*1.05)+
#scale_y_continuous(breaks = seq(0,60,by=5))+
labs(title = title,subtitle="by tech region and customer type",
y = xtitle,
x = "customer type",
caption = paste0("n=",n,"\ntime frame = 90 days\noutliers removed)"))+
theme(legend.position="none")+
atlassian_theme
table(df_exp$user_tier_gr_s)
variable = df_exp$branches_per_user
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
variable = df_exp$prs_per_push
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
1/18
2/10
variable = df_exp$prs_per_user
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
variable = df_exp$users_pr_interaction
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
variable = df_exp$interaction_per_pr
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
variable = df_exp$share_pring_users
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
variable = df_exp$median_ttm
summary(variable)
describeBy(variable, group=df_exp$user_tier_gr,digits=15,mat=T)
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(tidyverse)
library(ggplot2)
setwd("/Users/mebner/Documents/for_me/R_coursera/GitHub/practical-machine-learning")
install.packages("rpart.plot")
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(tidyverse)
library(ggplot2)
setwd("/Users/mebner/Documents/for_me/R_coursera/GitHub/practical-machine-learning")
if (!file.exists("train.csv")){
fileURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(fileURL, "train.csv", method="curl")
}
if (!file.exists("test.csv")) {
fileURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(fileURL, "test.csv", method="curl")
}
train <- read.csv("train.csv",na.strings=c("NA","DIV/0!",""))
test <- read.csv("test.csv",na.strings=c("NA","DIV/0!",""))
train   <-train[,-c(1:7)]
test <-test[,-c(1:7)]
nzv_col <- nearZeroVar(train)
train <- train[, -nzv_col]
corrupted_col <- sapply(train, function(x) {sum(!(is.na(x) | x == ""))})
null_col <- names(corrupted_col[corrupted_col < 0.6 * length(train$classe)])
train <- train[, !names(train) %in% null_col]
set.seed(24)
subs <- createDataPartition(y=train$classe, p=0.75, list=FALSE)
subtrain <- train[subs, ]
subtest <- train[-subs, ]
#Decision Tree
mod1 <- rpart(classe ~ ., data=subtrain, method="class")
pred1 <- predict(mod1, subtest, type = "class")
confusionMatrix(pred1, subtest$classe)
#Random Forest
mod2 <- train(classe ~ ., data=subtrain, method="rf")
mod2 <- train(classe ~ ., data=subtrain, method="rf")
pred2 <- predict(mod1, subtrain)
predict(mod1, subtrain)
# predict the outcome of the original testing data set
predict_final <- predict(mod2, test, type="class")
mod2 <- randomForest(classe ~. , data=subtrain, method="class")
predict_final <- predict(mod2, test, type="class")
predict_final
